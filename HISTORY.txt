v2.1.0  Overhauled SVG export support
        Updated English documentation to meet modern HTML5 standard
        Rewrote & simplified English installation instructions for clarity
        Hide unimplemented Print menu option
        BUGFIX: Instructions link opens browser in macOS & Linux
        BUGFIX: Ruby version comparisons in IFM, Inform & TADS writers
        courtesy of PeteT & Samwiseuk

v2.0.9  Fix a few Ruby 2.5 issues when using Automapper
        courtesy of Bill Lash/welash

v2.0.8  Bug fixed PDF Writer as it was no longer working with v2.1+ Rubys.

v2.0.5  Bug fixed Spanish locale crashing due to missing BOX_COMMENTS.

v2.0.4  Fixed translation in different locale (Spanish).
	Fixed version number in GUI.

v2.0.0  Updated for ruby 2.0+ threads and unicode

v1.3.1  Fixes to copy/paste on the same map.

v1.2.9  Fixes to some regexp that would show warnings in ruby 2.1.0

v1.2.8  Same as 1.2.7 but in all languages.

v1.2.7  Added Ruby version to about box message.

v1.2.4  Bug fixed for bad release of v1.2.3.

v1.2.3  Fixed SVG Export of room number.

v1.2.2  Removed some ruby1.9 warnings.

v1.2.1  Removed SVG from TODO list
	Added History of improvements

v1.2.0  Improvements:
	- Added support for exporting SVG files.
	
v1.1.4  Bug fixes:
	- Fixed bug with use of &,",' and line endings in descriptions in 
	  trizbort format.
	- Fixed potential crashes in Trizbort Reader.
	- Fixed up/down/in/out exits in Trizbort Reader and Writer.
	- Fixed use of & in tags.

v1.1.3  Bug fixes:
	- Fixed bug in transcript reader which could lead to a crash.
	- Fixed bug in Trizbort Writer which could leave map in half.

v1.1.2  Improvements:
	- Made room box use tabs for comments, descriptions and objects.
	- Made dark rooms select as orange.
	- Added support for dark rooms and descriptions in 
	  TrizbortReader/Writer.

v1.1.1  Improvements:
	- Added support for Trizbort maps for reading and writing.
	- Made failed connections turn cyan upon selection.

v1.1.0  - Bug fixed select all so it can be done with keyboard.
 
v1.0.9  - Bug fixed crash of cut selection when stubs were present.
	- Added option to automap rooms with all caps.
	- Bug fixed Select All/None rooms to show the selection.

v1.0.8  - Added option to load a map from command-line.
	- Bug fixed pdf output of letters near exits.
	- Added support for comments in each location.

v1.0.7  - Bug fixed cutting and pasting of rooms, 
	  which could overlap previous rooms in map and 
	  leave rooms without new connections.
	- Added localization to link switching with RMB.
	- Fixed drag selection of rooms.

v1.0.6  - Added new item list window.

v1.0.5  - Improved PDF output in Letter box mode.
	- Fixed IFM writer styles and syntax.

v1.0.4  - Fixed IFM connections to same room (loop paths)
	- Improve PDF output, applied samwise patch.
	- Fixed Inform7, 6 and TADS output of loop paths.

v1.0.2  - Added keyboard shortcut + and - for zooming in map

	Bug fixes:
	- Fixed modified map check which always asked for saving map.
	- Fixed start bug for unknown locales.  They now default to english.
	- Fixed deleting of a section due to a typo.

v1.0.1  Bug fixes:
	- Read only and automap title now print properly.
	- Bunch of warnings of ruby1.8.3 now removed.
	- Added rake-compiler to dependency since fox needs it.

v1.0.0  Bug fixes:
	- Versioning number now reflects v1.0.0 everywhere unlike v0.9.9.

	Improvements:
	- IFMapper now supports (actually, needs) Fox1.6.
	- IFMapper now supports internationalization to allow writing
	  adventures in other languages besides English under Fox1.6
	  using Unicode (UTF-8).
	  Language can be changed by setting the environment variable
	  LC_ALL or by starting IFMapper.rbw like:

	  >  ruby IFMapper.rbw -l es

	  Languages currently supported: English (en) and Spanish (es).
	  Default is still English.
	  To write out Inform or TADS text in other languages, you will
	  also need ruby's iconv module (which should now be part of
	  both the windows and unix distros)
	  To add new languages, go to ifmapper-1.0.0/lib/IFMapper/locales
	  and add one for your particular language.  
	  Then you need to create an UTF-8 Message.rb file.
	  If your editor does not support writing out UTF-8 directly,
	  you can create a file in another encoding and then convert
	  it with an utility like iconv (see example in 
	  ifmapper-1.0.0/lib/IFMapper/locales/es)

	- Inform7 writer is now better:
	  * It now properly recognizes male/female people a 
	    tad better.
	  * It now tries to avoid tags as much as possible
	    to keep Inform7's concept of natural language.
	  * It recognizes additional words as potential containers, etc.
	  * It now recognizes the 'lit' property in some objects.
	- Bug fixed wrap_text() in all exporters.


v0.9.9  Improvements:
	- It is now possible to export maps in Inform 7 new (beta) syntax,
	  albeit the English grammar is still very limited.
	  Just name your map with extension ".inform" instead of ".inf"
	  when saving it or exporting it.

v0.9.8  Bug fixes:
	- TADS Exporter was incorrectly recognizing locations with "room" in
	  them as keywords and adding numbers to their tags.  Fixed.
	  [Bug Report: Greg Boetcherr]
	- When replacing dark rooms with lit rooms, the transcript
	  automapper was discarding all other connections.  So, if two dark 
	  rooms were connected, once one of the dark rooms became lit, the 
	  connection to the other dark room was removed.  Fixed.
	- Typo: 'interative' for 'interactive' fixed in TranscriptReader.rb
	  [Bug Report: unknown]
	- Fixed PDF Exporter which had broken in v0.9.7.

	Improvements:
	- Automapper now recognizes two new ways of describing exits as
	  being blocked.
	- Automapper was not dealing with Undo properly when mapping 
	  interactively, leading to the creation of wrong exits if user
	  moved right after an undo.
	- Automapper now tries to use the path map to determine if a location
	  in map is blocked.  This should have the benefit of having the
	  automapper avoid placing rooms in the middle of complex connections.
	- Automapper now capitalizes the name of the game/room a tad more
	  correctly, by always having the first word capitalized.
	- Added HTML documentation and upload it to rubyforge.  These HTML
	  docs are now also distributed with IFMapper.
	- Gem will now add a copy of 'IFMapper.rbw' to the ruby bin directory.
	  [Suggestion: Lyle Johnson]
	- Added north-west, north-east, south-west, south-east as alternative
	  move directions.
	  [Suggestion: unknown]


v0.9.7  What's new:
	- IFM exporting was incorrectly exporting
	      map "";
	  for sections that were unnamed and also when there was only one
	  section.
	  Now, IFM exporting will not export map name if only one section
	  is present.  And if multiple sections are present but are unnamed,
	  sections will be given the default name of "Section #".
	  [Bug Report: Eric Forgeot]

	- Improved name finding for Classic transcripts, by actually dealing
	  with parenthesis in short names a tad more strictly.

	- Added support for reading GUEMap maps (.gmp format).
	  For both, GUEMap v1.0+ and GUEMap v2.0 (beta).
	  Comments in GUEmaps will be placed in the task section of rooms.
	  As GUEmaps supports placing rooms with a finer grid, IFMapper will
	  try to translate grid positions, but may not always be entirely
	  successful.

	- Fixed a crashing bug that could occur very rarely when loading
	  multiple maps due to the canvas not being created.

	- Fixed my email in the README.txt.

	- Improved warning box to allow for multi-line messages.
	  This helps with telling user about errors when reading from
	  a file.

	- Rewrote a big chunk of the map readers (inform/tads).  Reason was
	  two-fold:
		* make the code smaller and simpler
		* fix a logic problem in the layout algorithm which was 
		  leading to maps being laid out much bigger when map had 
		  a lot of one way connections.  Now room layout is much, much
		  improved.
		    [Bug Report: Greg Boettcher]
		* sped up the creation of map code a tad.

        - Inform reader now understands most special international character
	  sequences (@:a, etc).

	- TADS reader was marking some one way door exits as normal exits.
	  Fixed.

	- TADS reader was not dealing with @location notation properly.
	  It was sometimes placing objects in the wrong room, or completely
	  ignoring them.

	- TADS reader now handles exits that are <<replaceAction(Enter,*)>>

	- Inform and TADS readers will now extract the name of the map from the
	  Story constant.

	- Inform reader is a tad smarter about locating objects.


v0.9.6  What's new:

	- IFM exporting had gotten broken around v0.9 due to a refactoring
	  bug.  Fixed.

	- CTRL selection was never quite working as advertised.  Now it
	  properly does toggle selecting of rooms/connections.

	- Minor improvement to the automapper.  Now places that have Dr.,
	  St., Ave. and Inc. in them will be recognized as locations.  
	  Previously, they were ignored due to the period.

	- The automapper will now correctly parse objects from take commands
	  when the response is something like:
	       You take the pencil from the bag.
	  Previously, the object was considered to be 'pencil from the bag'
	  instead of just 'pencil'. 

	- Slight improvement to the automapper room description		
	  identification.  When comparing descriptions and a perfect match
	  or submatch of the description cannot be found against a room, all 
	  words in that room description will be compared for a 
	  potential match.  A room will be matched as already present if
	  at least 20 words match (they also have to be in the same order).  
	  However, if multiple rooms happen to match 20 words, then the room
	  with more words matched will be considered as the correct match.
	  This improvement helps with locations that have identical
	  descriptions but that perhaps only change the exit paths.

	- I bug fixed the problem with TADS transcripts with the automapper
	  crashing it.  This was supposed to be fixed in 0.9.5 but I had
	  inadvertedly reverted the fix before release.

	- Added a new mode to Automapper of transcripts.  The new
	  mode is called Capitalized and helps map rooms where the room name
	  uses a single capitalized sentence, like:
	       Women's change room
	       Western closet
	  instead of the more standard:
	       Women's Change Room
	       Western Closet
	  This format seems somewhat popular among IFComp entries, which are
	  probably trying to follow Infocom's format, but do so incorrectly.

	- Added a new ADRIFT mode to Automapper.  This mode helps map
	  ADRIFT games, which have some weird form of transcripts, lacking a
	  prompt.  Tested with The PK Girl mainly.

	- TADS3 source code reader is now much improved.
	  It recognizes PathPassages, TravelMessage and noTravel 
	  exits properly. 
	  It does not consider a missing room as a fatal error and 
	  will properly find names of rooms when room line is split into 
	  multiple lines.
	  It will also display passage and stairway exits properly (previously,
	  they were considered door exits).
	  Also, TADS3 reader can now properly parse a t3m Makefile for
	  sources.
	  You should now be able to map the big TADS3 demo game 
	  Return to Ditch Day from source, which previously would run 
	  into some issues. 

	- TADS and Inform readers now use a slightly different algorithm for
	  laying out rooms.  This new algorithm results in smaller maps and
	  usually less complex exits failing.

v0.9.5  What's new:

	- IFMapper now looks for Fox1.4 and 1.2, in that order.  Note that
	  I still recommend Fox1.2, as it is more stable.

	- Automapper now supports selecting how locations are identified 
	  (either by comparing the room descriptions or just the short name) 
	  as well as adds support for some unusual location short name
	  formats used in some Infocom games (Moonmist, Witness).

	- Automapper should now be able to automatically detect the name of
	  the game from the transcript (at least with WinFrotz and
	  Glux transcripts).

	- Automapper was idiotically skipping the first command typed in
	  transcript.  Fixed.

	- Room descriptions now remove starting/trailing spaces or newlines.

	- If possible, when getting an object, if the automapper sees an
	  answer like "You now have the ...", it will take the object name
	  from that line instead of from the name the user typed in his
	  command.

	- Removed some debugging put statements from automapper that had been
	  left by mistake in v0.9.

	- Added the name of the room to the statusbar when mouse is over
	  a room.

	- You can now save an .ifm, .t, or .inf file directly from the
	  save as requester, if you type in a filename with such an
	  extension.

	- The automapper now also looks for transcripts with extensions
	  .scr (Magnetic Scrolls/Glux) and .txt (Hugo) by default.
	  Note that Hugo, Glux and Magnetic Scrolls transcripts do
	  not append text to transcripts after each move, instead keeping a 
	  buffer that gets spit out when filled.  Thus, automapping while
	  playing a game with these interpreters game is not as interactive 
	  as with winfrotz and similar.  This method can also lead to some 
	  rooms to be missed or some connections be mistaken, as sometimes
	  room descriptions will be written out only partially.
	  Finally, TADS interpreter is the worst, in that it will actually
	  lock the transcript file, not allowing any other program to read it.

	- Cut/Copying was not allowing you to copy stub connections.  Fixed.

	- Pasting was not pasting the path properties (special, door, etc)

	- I changed a tad how connections are stored internally to using
	  arrays for the two rooms and the two exit texts.  I then added
	  code for some common operations.

	- I removed the idea of BtoA connections.  Now, whenever a BtoA
	  connection is needed, the elements in the connection are reversed.
	  This helps immensely to simplify operations and comparisons
	  on connections (and I should have done this much earlier).
	  In the GUI, if you want to flip a connection from A->B to B->A,
	  you no longer do so with clicking twice on the connection but
	  can do so now from the right mouse menu.

	- Stub connections are now drawn a tad shorter.  This helps to
	  avoid the problem of two nearby stub connections looking as
	  if it was a single connection.

	- Connection window now correctly disables buttons when selecting
	  looping connections.

	- Looping connections are no longer drawn as curves, as they look
	  more clear as straight lines.

	- Fixed a minor display bug that would draw room index numbers
	  with the wrong font, while editing the room.

	- Help->About will now also display the FXRuby version being
	  used.

	- When adding multiple objects with 'get all' during an automapping
	  of a transcript, you would get additional newlines.  Fixed.

	- Sped up a tad path finding and most operations involving path map.

	- Added a check to automapper when transcripts cannot be opened.
	  This helps, for example, with TADS transcripts, which are locked
	  and cannot be opened while you are still on script mode (this
	  absolutely blows in TADS!).
	  Previously, opening a TADS transcript in progress would just 
	  crash IFMapper.

	- Fixed yet another problem with links among rooms in different
	  sections that could still result in crashes while automapping.

	- File->Save As will now warn you if you are about to overwrite a
	  file.

	- Deleting rooms will now correctly recalculate the path map.

	- IFMapper gem was not including the demo maps with extension
	  .map.  Fixed.

	- Fixed a thread racing condition which would modify the map's
	  sizes as it was being drawn.  This could sometimes result in crashes
	  during transcript automapping.  Now we use a mutex to avoid the
	  problem.

	- I added a work-around for a bug in Fox that would sometimes
	  not re-initialize the canvas properly and would lead to a crash,
	  usually after 1+ hour of use of the automapper.  This problem is not
	  yet fixed (it is a Fox issue), but the work-around will try at
	  least twice to make it work.
	
	- Switching from one map to another now immediately updates the
	  section # in the toolbar.

	- There's now a new option called Map->Room List which will
	  list all the rooms in your map, allowing you to also select 
	  and sort rooms from that list.

	- Added new full maps for Risorgimiento Represo, Christminster, a full
	  Anchorhead, the three Earth & Sky games, City of Secrets, Moonmist,
	  All Roads, Trinity.
	  Partial maps for Dreamhold, Savoir Fare, Heroine's Mantle, World's
	  Apart, Metamorphoses, Pytho's Mask.
	  All of these were created with the automapper, as I played those 
	  games.

v0.9 - What's new:

       - Fixed a very idiotic bug in Cut algorithm.  It was basically 
	 destroying all cut connections right after they were cut.

       - Editing rooms' names or objects now results in a much, much
	 faster redraw of the map, even if map is very complex.

       - You can now display and edit a location's description.  This
	 description is often used by the the automapper during transcript
	 mapping to determine the uniqueness of a room, albeit the main 
	 use of editing a room description is to allow creation of 
	 new games (currently, Inform/TADS3).

       - You can now optionally avoid displaying the task or description
	 section on rooms.
	 This is mainly to allow you to read maps that have walkthru tasks
	 in them without giving away the game.

       - IFMapper now supports the concept of closed but unlocked doors.  
	 These will be displayed as a white square between connections.
	 The main interest of placing these doors is for creation
	 of new Inform games, not so much for solving games.

       - You can now select exit stubs.  Useful for deleting them when
	 automapper detects them incorrectly.

       - Saving and Loading a map will now verify the integrity of the map
	 is correct.  This prevets autosave from saving a corrupt map if
	 there is a bug in the program.

       - CTRL-Selection is a toggle selection.  That is, if you click once
	 on something already selected, it is deselected.

       - Automapper improvements
         * Automapper will now deal with complex commands involving 'then'
	   a tad better.
	 * An additional fix to dark rooms.  Looking in a dark room would
	   result in the dark room being created, even if the room had
	   already been tagged as dark.  Fixed.
	 * When choosing an up/down/in/out/random move direction, a new
	   connection will not be generated if there is already a similar
	   n/s/e/w/etc. link between the two rooms.  This helps to simplify
	   some maps.
	 * Automapper now will try to automatically remove stub exits that
	   are not really exits if the user tries to move in that direction
	   and fails.
	 * Automapping was incorrectly reporting a maze when a new exit
	   would point in the same direction as a visited up/down or in/out
	   exit.
	 * Room descriptions are now compared (and stored) without \n at the
	   end of each line.  This helps with comparing descriptions with any
	   description the user typed manually.
	 * Automapper will no longer crash if a link is attempted between
	   two rooms in different sections, nor will it corrupt your map as
	   it did before.
	 * Automapper is now a tad smarter in not considering words such
	   as open/close in descriptions.  This helps the automapper not
	   get confused if a door which is part of the room description 
	   changes state.

       - Inform support.

	 * You can now read an inform file and automap it, with
	   some limitations.
	   The main limitation deals with how doors are handled, as Inform
	   offers an almost infinite number of ways of dealing with doors,
	   including the use of at least one of 4 popular libraries.  Some
	   code will actually resolve issues of where doors lead to within,
	   for example, the "Enter" or "Exit" command, making parsing .inf
	   files impossible without writing a full inform compiler.
	   A second limitation is that Inform allows doors that exist only 
	   on one "side" of a room.  These exits will be ignored.
	   The inform automapper should prove compatible with most door 
	   libraries, but will probably choke on a lot of hand-coded code.

	 * You can now export a map as an Inform .inf (source code) file.
	   This can be helpful at the beginning of designing a game to place
	   all objects/characters, doors and room descriptions easily.
	   Obviously, these source code files will later get hacked heavily
	   manually to provide the real game functionality.  
	   IFMapper just gives you a start, helping you design
	   the landscape a tad more easily.
	   Doors are created in Inform using Andrew MacKinnon's easydoors 
	   Inform extension.

	   NOTE:  A word of warning about reading Inform or TADS maps.
	   Since these file formats have no concept of 'sections', they
	   can lead to some **HUGE** maps.  The original Adventure, for
	   example, results in a 100x100 map.  These huge maps may run
	   into memory issues and currently make the path-finding algorithm
	   work extremely slow.

        - TADS 3 support

	  * NOTE:  TADS 2 is currently *NOT* supported.

	  * You can now read a TADS 3 file and automap it, with some
	    limitations.
	    Basically, TADS 3 templates are currently *NOT* supported.
	    Instead, the standard library templates are kind of hard-coded
	    in the reader.
	    TADS 3's standard lib is more sensible than Inform when it 
	    comes to doors, so it should hopefully lead to less 
	    problems there.

	  * You can now export a TADS 3 (.t) file.  Same concept as Inform,
	    albeit doors are created using TADS3 standard door classes.



v0.8.5 - This is mainly a bug fix release.
	 
	 - Improvements to the automapper:
	 * Now it uses much, much less memory as the automapper database
	   will now use the actual map database.  This is mainly a departure
	   from the original Perl code.
	 * Now it will properly recognize rooms that were created manually.
	   This allows you to start the automapper with an already created
	   map and also work around any rooms that the automapper does not
	   automatically recognize.
	 * Cut/Copy/Paste rooms will also internally copy their descriptions,
	   so the automapper will not get confused.
	 * Adding objects now checks if the object was already typed in
	   manually.
	 * Fixed a bug with in/out/down/up exits not recognizing if the exit
	   was already drawn in the room, resulting in two identical exits.
	 * Now saving/loading a map that has been automapped will also save its
	   descriptions.  This allows you to keep automapping a game easily
	   in different sessions.
	 * Restore/Restart/Unscript was not working appropiately.  
	   It should have allowed you to "teleport" to any new location, yet 
	   it was creating incorrect links.
	 * There's now better handling of rooms gone dark (previously, they
	   were treated as a separate location and multiple dark rooms
	   would create links to a single dark room)
	 
	 - .map save format now is smaller, as some useless data was getting
	   saved, which we now skip.  Note, however, that when automapping
	   .map size is bigger, as room descriptions get also stored now.

	 - Fixed a minor display bug when room name would take 4 rows and
	   objects would not fit in box.

	 - Added some new (possibly incomplete) maps, that I did while
	   testing the stuff.  All done with automapper: 
	   Deadline, Dutch Dapper, Blue Doors, Inhumane, Not Just an
	   Ordinary Ballerina.

	 - Map resizing was always complaining about rooms being deleted.
	   Fixed.

	 - Fixed a nasty crashing bug that would happen if trying to load
	   an IFM file with no windows open.

	 - Fixed a nasty crashing bug when pasting and then immediately
	   selecting pasted rooms, as the rooms were not added to the 
	   pathmap.

	 - Complex doors that are locked are now drawn with a crossed line
	   along the middle.

	 - Complex paths drawn as bsplines are now drawn with a tad less
	   quality to improve drawing speed.

v0.8.1 - Just some fixes to the automapper, as it was failing on some 
	 relatively simple games.

	 Automapper was not matching rooms with periods in them.  This was
	 causing problems with games that had rooms like "Mr. Hellman's 
	 Bedroom".

	 Improved the handling of multiple directional commands.  A command
	 like: 'n, e, w' is now handled properly.

	 Moved 'fox' requires together so it is easy to upgrade to 
	 upcoming fox14.

v0.8 - Added the ability to create linked rooms using the Numeric Keypad.
       Turn on NUM LOCK, select a single room and then use the numbers in 
       the keypad to move thru an exit or add a room in a certain direction.

       Changed name of the main program from IFMapper.rb to IFMapper.rbw.
       This helps on windows in not bringing up a dummy console window.

       Added Home/End/PageUp/PageDown to move nodes diagonally.  This
       helps with the Keypad, when not in NUM LOCK mode.

       Fixed a bug that effected IFMReader that I inadvertedly 
       introduced in v0.7.

       Removed Postscript support.  I just realized that GSview also reads
       PDFs making Postscript really not needed.

       Added splitting of huge sections into multiple pages when spitting
       PDFs.

       Fixed a bug that would result in a stack trace when loading an IFM
       file that was pretty big onto an a very tiny empty map.

       Added the ability to Automap a game from transcripts.  Go to
       your game, type 'script' and the filename to save your transcript to.
       Then, go to IFMapper and go to Map->Automap->Start.  Give it that
       filename.  Voila.  IFMapper will start automapping the game.
       Leave the transcript on and, as you play the game, IFMapper behind
       the scenes will keep automapping.

       # Added tooltip when zoomed out.

v0.7 - Fix the issue of users trying to fire up the application from another
       directory, without cd'ing themselves to the IFMapper directory.

       Added IFM export.
       Note that albeit you can load and save out an IFM map file, if you load 
       and then save an ifm file, the integrity of the ifm file created by 
       hand will not be kept.
       Things such as ifm variables, task and object dependencies will be
       lost if you do that.  It is unlikely I will add full walkthru 
       functionality to IFMapper.
       IFMapper's main format remains its propietary .map format (which is
       just marshalling of its internal ruby classes).

       Added a popup menu to the use of the right mouse button.  The main
       functionality of this is to allow you to easily shift or switch
       a connection from one room exit to another.  
       To use it, select a single connection among rooms, then press RMB 
       and select the room and the exit you want to shift the connection to.  
       Voila!  Much easier than having to delete and recreate the connection.

       Improved selection mechanism a tad to be more accurate.  Now you
       can create complex connections near other complex connections, allowing
       you to make, for example, intercrossing connections like:
		R---R
		|\ /|
		| X |
		|/ \|
		R---R
       This still needs some minor work as you cannot select long connections
       near room transition areas.

       Fixed a startup crashing bug when HOME variable was not defined.
       If it is, IFMapper will use the value of it.  If not, user preferences 
       will get saved to %USERPROFILE% if defined or %HOMEDRIVE%/%HOMEPATH%.
       If all fails, prefs will get saved to the current directory.

       Searching rooms, objects or tasks now also tries to center the window
       on the current room being found.  The Next/Previous button now make
       a tad more sense.  Also, rooms in other sections are not selected
       until you move to that section using Next/Previous.

       There's now an additional search item to allow searching for keywords
       in tasks. 

       You can now select all nodes or none of them from a menu option.

       Zooming with mousewheel is a tad faster.

       There's now some very bare bones Postscript exporting, albeit no
       printing yet.  Printing is really a tough cookie to crack across 
       platforms.

       Fixed a minor bug regarding failed connections that could show with some
       ifm files (mainly Zork1.ifm)

       Added some more documentation and also some thank yous.

       Added proper cut/copy/pasting of rooms and connections to the same
       section, to new sections or even to different maps.  Just select the
       rooms and connections you want to copy and do cut/copy and then paste.
       Rooms are pasted to the first map area that has enough free nodes to
       support them.

       Made SHIFT-DRAG selection also select connections.

       Updated my email.

v0.6 - Fixed a crashing bug when nodes were moved too far to the right or
       to the bottom of the map area.
       
       Recoded A* algorithm to fix some bugs and moved it away from FXMap
       class, into its separate class and file.
       
       Added cursors for n/nw/w/sw/s/se/e/ne connections.  Note, however,
       that the hotspot for the cursors is not working properly (this seems
       an fxruby bug).
       
       Added color preferences.
       
       Some refactoring and documenting of code.
       
       PDF Export is improved.  Now map sections will be packed into a
       page when possible.  A landscape page will be automatically chosen
       for each section, if it helps fit the map in the page.
       Also, pdf export will now show objects in rooms as well as 'U', 'D',
       'I', 'O' text in exits. 

       Added the ability to set the map width/height from the Map Information
       panel.

       Fixed an obscure bug when loading IFM maps that were bigger than the
       default map size.

v0.5 - First public release on Rubyforge.
